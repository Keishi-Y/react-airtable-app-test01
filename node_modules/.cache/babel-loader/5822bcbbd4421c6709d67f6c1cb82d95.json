{"ast":null,"code":"var _jsxFileName = \"/Users/k4/test-apps/react-airtable-app-test01/src/components/Tags.js\";\nimport React, { useState, useEffect } from 'react';\nexport default function Tags({\n  tagsUpdated,\n  key\n}) {\n  const tagChoices = ['node', 'javascript', 'react', 'jamstack'];\n  const [selectedTags, setSelectedTags] = useState([]);\n  useEffect(() => {\n    setSelectedTags([]);\n  }, [key]);\n\n  const tagChange = e => {\n    const value = e.target.value;\n    const alreadySelected = selectedTags.includes(value);\n\n    if (e.target.checked && !alreadySelected) {\n      setSelectedTags([...selectedTags, value]);\n    } else if (!e.target.checked && alreadySelected) {\n      setSelectedTags(selectedTags.filter(prevTag => prevTag !== value));\n    }\n  };\n\n  useEffect(() => {\n    tagsUpdated(selectedTags);\n  }, [selectedTags, tagsUpdated]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, tagChoices.map((choice, index) => /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox-inline mr-3\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    value: choice,\n    onChange: tagChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }), ' ' + choice)));\n}","map":{"version":3,"sources":["/Users/k4/test-apps/react-airtable-app-test01/src/components/Tags.js"],"names":["React","useState","useEffect","Tags","tagsUpdated","key","tagChoices","selectedTags","setSelectedTags","tagChange","e","value","target","alreadySelected","includes","checked","filter","prevTag","map","choice","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAd,EAAoC;AAC/C,QAAMC,UAAU,GAAG,CAAC,MAAD,EAAS,YAAT,EAAuB,OAAvB,EAAgC,UAAhC,CAAnB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,eAAe,CAAC,EAAD,CAAf;AACH,GAFQ,EAEN,CAACH,GAAD,CAFM,CAAT;;AAIA,QAAMI,SAAS,GAAIC,CAAD,IAAO;AACrB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAME,eAAe,GAAGN,YAAY,CAACO,QAAb,CAAsBH,KAAtB,CAAxB;;AACA,QAAID,CAAC,CAACE,MAAF,CAASG,OAAT,IAAoB,CAACF,eAAzB,EAA0C;AACtCL,MAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBI,KAAlB,CAAD,CAAf;AACH,KAFD,MAEO,IAAI,CAACD,CAAC,CAACE,MAAF,CAASG,OAAV,IAAqBF,eAAzB,EAA0C;AAC7CL,MAAAA,eAAe,CACXD,YAAY,CAACS,MAAb,CAAqBC,OAAD,IAAaA,OAAO,KAAKN,KAA7C,CADW,CAAf;AAGH;AACJ,GAVD;;AAYAT,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,WAAW,CAACG,YAAD,CAAX;AACH,GAFQ,EAEN,CAACA,YAAD,EAAeH,WAAf,CAFM,CAAT;AAIA,sBACI,0CACKE,UAAU,CAACY,GAAX,CAAe,CAACC,MAAD,EAASC,KAAT,kBACZ;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAwC,IAAA,GAAG,EAAEA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAED,MAFX;AAGI,IAAA,QAAQ,EAAEV,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMK,MAAMU,MANX,CADH,CADL,CADJ;AAcH","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function Tags({ tagsUpdated, key }) {\n    const tagChoices = ['node', 'javascript', 'react', 'jamstack'];\n    const [selectedTags, setSelectedTags] = useState([]);\n\n    useEffect(() => {\n        setSelectedTags([]);\n    }, [key]);\n\n    const tagChange = (e) => {\n        const value = e.target.value;\n        const alreadySelected = selectedTags.includes(value);\n        if (e.target.checked && !alreadySelected) {\n            setSelectedTags([...selectedTags, value]);\n        } else if (!e.target.checked && alreadySelected) {\n            setSelectedTags(\n                selectedTags.filter((prevTag) => prevTag !== value)\n            );\n        }\n    };\n\n    useEffect(() => {\n        tagsUpdated(selectedTags);\n    }, [selectedTags, tagsUpdated]);\n\n    return (\n        <>\n            {tagChoices.map((choice, index) => (\n                <label className=\"checkbox-inline mr-3\" key={index}>\n                    <input\n                        type=\"checkbox\"\n                        value={choice}\n                        onChange={tagChange}\n                    />\n                    {' ' + choice}\n                </label>\n            ))}\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}